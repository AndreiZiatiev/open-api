/**
 * User API
 * User application provides support for most basic functionalities. Most important to keep private user information to allow identify the user and maintain contact information.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Address } from './address';
import { Attachment } from './attachment';
import { ContactPoint } from './contactPoint';
import { Entity } from './entity';
import { Gender } from './gender';
import { HumanName } from './humanName';
import { Identifier } from './identifier';
import { Identity } from './identity';

/**
 * An individual has identity outside of a healthcare setting. The Person resource is used to capture this information and to relate the person as an individual to other resources that do have a health-related context.  For example, while a patient resource may be created and maintained by each organization providing care for that person as a patient, a person resource provides a mechanism for linking patient resources across different organizations and their unique patient identity domains. 
 */
export interface Person { 
    /**
     * Person identity. Id is global (guid), Name is person email.
     */
    identity: Identity;
    /**
     * Person is an entity and can be created and updated through API.
     */
    entity?: Entity;
    /**
     * Identifiers for this entity. A human identifier for this person.
     */
    identifier?: Array<Identifier>;
    /**
     * A name associated with the person.
     */
    name?: Array<HumanName>;
    /**
     * A contact detail for the person.
     */
    telecom?: Array<ContactPoint>;
    /**
     * Person gender.
     */
    gender?: Gender;
    /**
     * The date on which the person was born
     */
    birthDate?: any;
    /**
     * One or more addresses for the person.
     */
    address?: Array<Address>;
    /**
     * Image of the person
     */
    photo?: Attachment;
}